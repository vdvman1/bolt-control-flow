Search.setIndex({"docnames": ["autoapi/bolt_control_flow/helpers/index", "autoapi/bolt_control_flow/index", "autoapi/bolt_control_flow/parse/index", "autoapi/bolt_control_flow/types/index", "autoapi/index", "index"], "filenames": ["autoapi/bolt_control_flow/helpers/index.rst", "autoapi/bolt_control_flow/index.rst", "autoapi/bolt_control_flow/parse/index.rst", "autoapi/bolt_control_flow/types/index.rst", "autoapi/index.rst", "index.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bolt_control_flow.helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bolt_control_flow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bolt_control_flow.parse</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bolt_control_flow.types</span></code>", "API Reference", "Welcome to bolt-control-flow's documentation!"], "terms": {"runtim": [0, 1, 3], "implement": [0, 1, 3], "thi": [0, 1, 2, 3, 4], "i": [0, 1, 2, 3], "an": [0, 1, 2, 3], "intern": [0, 1, 2, 3], "meant": [0, 1, 2, 3], "public": [0, 1, 2, 3], "usag": [0, 1, 2, 3], "get_runtime_help": 0, "dict": [0, 1, 3], "str": [0, 1, 2, 3], "ani": [0, 1, 2, 3], "call_branch": 0, "condit": [0, 1, 3], "bolt": [0, 1, 2, 3], "contextlib": 0, "abstractcontextmanag": 0, "call_not": 0, "binary_log": [0, 2], "op": [0, 1, 3], "liter": 0, "left": 0, "right": [0, 1, 3], "collect": [0, 2], "abc": [0, 2], "callabl": 0, "casecal": 0, "typealia": [0, 1, 3], "casedriv": 0, "obj": 0, "case_func": 0, "none": [0, 1, 2, 3], "not_obj": 0, "case_definitely_match": 0, "bool": [0, 1, 2, 3], "fals": [0, 1, 3], "static": [0, 1, 3], "codegen_access_underli": 0, "target": 0, "gener": [0, 1, 2, 3, 4], "access": [0, 1, 3], "underli": 0, "case": [0, 1, 3], "object": 0, "keep": 0, "hardcod": 0, "name": [0, 1, 3], "close": 0, "definit": 0, "paramet": [0, 1, 3], "code": [0, 1, 3], "return": [0, 1, 3], "type": [0, 1, 4, 5], "multibranchdriv": [0, 1, 3], "branch_typ": [0, 1, 3], "branchtyp": [0, 1, 3], "parent_cas": [0, 1, 3], "context_manag": 0, "codegen_cal": 0, "acc": [0, 2], "accumul": [0, 2], "helper": [1, 3, 4, 5], "pars": [1, 4, 5], "caseresult": [1, 3], "inform": [1, 3], "about": [1, 3], "match": [1, 3], "codegen": [1, 2, 3], "member": [1, 3], "properti": [1, 3], "match_typ": [1, 3], "variabl": [1, 3], "hold": [1, 3], "bind": [1, 3], "given": [1, 3], "casematchtyp": [1, 3], "The": [1, 3], "statu": [1, 3], "assign": [1, 3], "caller": [1, 3], "": [1, 3], "scope": [1, 3], "must": [1, 3], "contain": [1, 3, 4], "all": [1, 3], "pattern": [1, 3], "expect": [1, 3], "extra": [1, 3], "ignor": [1, 3], "If": [1, 3], "fail": [1, 3], "yield": [1, 3], "valu": [1, 3], "indic": [1, 3], "build": [1, 3], "time": [1, 3], "pass": [1, 3], "run": [1, 3], "bodi": [1, 3], "mayb": [1, 3], "can": [1, 3], "t": [1, 3], "determin": [1, 3], "until": [1, 3], "It": [1, 3], "check": [1, 3], "wrap": [1, 3], "so": [1, 3], "base": [1, 2, 3], "enum": [1, 3], "succeed": [1, 3], "whether": [1, 3], "isn": [1, 3], "known": [1, 3], "casepartialresult": [1, 3], "__case__": [1, 3], "doesn": [1, 3], "notimplementedtyp": [1, 3], "being": [1, 3], "against": [1, 3], "possibl": [1, 3], "true": [1, 3], "els": [1, 3], "anyth": [1, 3], "A": [1, 3], "us": [1, 3], "within": [1, 3], "current": [1, 3], "placehold": [1, 3], "made": [1, 3], "more": [1, 3], "specif": [1, 3], "onc": [1, 3], "multibranch": [1, 3], "process": [1, 3], "get": [1, 3], "if_els": [1, 3], "branchinfo": [1, 3], "result": [1, 3], "parent": [1, 3], "__multibranch__": [1, 3], "Will": [1, 3], "ar": [1, 3], "follow": [1, 3], "onli": [1, 3], "piec": [1, 3], "merg": [1, 3], "separ": [1, 3], "nest": [1, 3], "singl": [1, 3], "e": [1, 3], "g": [1, 3], "elif": [1, 3], "_": [1, 3], "binarylogicalfallback": [1, 3], "from": [1, 3], "binari": [1, 3], "logic": [1, 2, 3], "oper": [1, 3], "request": [1, 3], "fallback": [1, 3], "default": [1, 3], "behaviour": [1, 3], "dure": [1, 3], "attempt": [1, 3], "call": [1, 3], "__rlogical_": [1, 3], "__": [1, 3], "also": [1, 3], "plain": [1, 3], "evalu": [1, 3], "lazi": [1, 3], "callback": [1, 3], "calcul": [1, 3], "again": [1, 3], "wrappedcas": [1, 3], "marker": [1, 3], "safe": [1, 3], "without": [1, 3], "make": [1, 3], "new": [1, 3], "function": [1, 3], "command": [1, 3], "after": [1, 3], "mecha": 2, "dispatch": 2, "ast": 2, "cases_var": 2, "list": 2, "is_conditional_only_in_last_cas": 2, "node": 2, "astexpressionbinari": 2, "astnod": 2, "if_stat": 2, "astcommand": 2, "else_stat": 2, "page": [4, 5], "auto": 4, "document": 4, "1": 4, "bolt_control_flow": [4, 5], "creat": 4, "sphinx": 4, "autoapi": 4, "api": 5, "refer": 5, "submodul": 5, "packag": 5, "class": 5, "attribut": 5, "index": 5, "modul": 5, "search": 5}, "objects": {"": [[1, 0, 0, "-", "bolt_control_flow"]], "bolt_control_flow": [[1, 1, 1, "", "BinaryLogicalFallback"], [1, 1, 1, "", "BranchInfo"], [1, 1, 1, "", "BranchType"], [1, 4, 1, "", "Case"], [1, 1, 1, "", "CaseMatchType"], [1, 4, 1, "", "CasePartialResult"], [1, 1, 1, "", "CaseResult"], [1, 1, 1, "", "WrappedCases"], [0, 0, 0, "-", "helpers"], [2, 0, 0, "-", "parse"], [3, 0, 0, "-", "types"]], "bolt_control_flow.BinaryLogicalFallback": [[1, 2, 1, "", "right"]], "bolt_control_flow.BranchInfo": [[1, 2, 1, "", "branch_type"], [1, 2, 1, "", "parent_cases"]], "bolt_control_flow.BranchType": [[1, 2, 1, "", "IF_ELSE"], [1, 2, 1, "", "MATCH"], [1, 3, 1, "", "helper"]], "bolt_control_flow.CaseMatchType": [[1, 2, 1, "", "FAILED"], [1, 2, 1, "", "MATCHED"], [1, 2, 1, "", "MAYBE"]], "bolt_control_flow.CaseResult": [[1, 1, 1, "", "Codegen"], [1, 2, 1, "", "bindings"], [1, 5, 1, "", "failed"], [1, 2, 1, "", "match_type"], [1, 5, 1, "", "matched"], [1, 5, 1, "", "maybe"]], "bolt_control_flow.CaseResult.Codegen": [[1, 5, 1, "", "binding"], [1, 3, 1, "", "match_type"], [1, 2, 1, "", "name"]], "bolt_control_flow.helpers": [[0, 4, 1, "", "CaseCallable"], [0, 1, 1, "", "CaseDriver"], [0, 1, 1, "", "MultibranchDriver"], [0, 6, 1, "", "binary_logical"], [0, 6, 1, "", "call_branch"], [0, 6, 1, "", "call_not"], [0, 6, 1, "", "get_runtime_helpers"]], "bolt_control_flow.helpers.CaseDriver": [[0, 2, 1, "", "case_definitely_matched"], [0, 2, 1, "", "case_func"], [0, 5, 1, "", "codegen_access_underlying"], [0, 2, 1, "", "not_obj"], [0, 2, 1, "", "obj"], [0, 2, 1, "", "runtime"]], "bolt_control_flow.helpers.MultibranchDriver": [[0, 5, 1, "", "codegen_call"], [0, 2, 1, "", "context_manager"], [0, 2, 1, "", "obj"], [0, 2, 1, "", "runtime"]], "bolt_control_flow.parse": [[2, 1, 1, "", "Codegen"]], "bolt_control_flow.parse.Codegen": [[2, 5, 1, "", "binary_logical"], [2, 2, 1, "", "cases_vars"], [2, 5, 1, "", "else_statement"], [2, 5, 1, "", "if_statement"], [2, 2, 1, "", "is_conditional_only_in_last_case"]], "bolt_control_flow.types": [[3, 1, 1, "", "BinaryLogicalFallback"], [3, 1, 1, "", "BranchInfo"], [3, 1, 1, "", "BranchType"], [3, 4, 1, "", "Case"], [3, 1, 1, "", "CaseMatchType"], [3, 4, 1, "", "CasePartialResult"], [3, 1, 1, "", "CaseResult"], [3, 1, 1, "", "WrappedCases"]], "bolt_control_flow.types.BinaryLogicalFallback": [[3, 2, 1, "", "right"]], "bolt_control_flow.types.BranchInfo": [[3, 2, 1, "", "branch_type"], [3, 2, 1, "", "parent_cases"]], "bolt_control_flow.types.BranchType": [[3, 2, 1, "", "IF_ELSE"], [3, 2, 1, "", "MATCH"], [3, 3, 1, "", "helper"]], "bolt_control_flow.types.CaseMatchType": [[3, 2, 1, "", "FAILED"], [3, 2, 1, "", "MATCHED"], [3, 2, 1, "", "MAYBE"]], "bolt_control_flow.types.CaseResult": [[3, 1, 1, "", "Codegen"], [3, 2, 1, "", "bindings"], [3, 5, 1, "", "failed"], [3, 2, 1, "", "match_type"], [3, 5, 1, "", "matched"], [3, 5, 1, "", "maybe"]], "bolt_control_flow.types.CaseResult.Codegen": [[3, 5, 1, "", "binding"], [3, 3, 1, "", "match_type"], [3, 2, 1, "", "name"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:data", "5": "py:method", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "data", "Python data"], "5": ["py", "method", "Python method"], "6": ["py", "function", "Python function"]}, "titleterms": {"bolt_control_flow": [0, 1, 2, 3], "helper": 0, "modul": [0, 2, 3], "content": [0, 1, 2, 3, 5], "class": [0, 1, 2, 3], "function": 0, "attribut": [0, 1, 3], "submodul": 1, "packag": 1, "pars": 2, "type": 3, "api": 4, "refer": 4, "welcom": 5, "bolt": 5, "control": 5, "flow": 5, "": 5, "document": 5, "indic": 5, "tabl": 5}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"bolt_control_flow.helpers": [[0, "module-bolt_control_flow.helpers"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"]], "Classes": [[0, "classes"], [1, "classes"], [2, "classes"], [3, "classes"]], "Functions": [[0, "functions"]], "Attributes": [[0, "attributes"], [1, "attributes"], [3, "attributes"]], "bolt_control_flow": [[1, "module-bolt_control_flow"]], "Submodules": [[1, "submodules"]], "Package Contents": [[1, "package-contents"]], "bolt_control_flow.parse": [[2, "module-bolt_control_flow.parse"]], "bolt_control_flow.types": [[3, "module-bolt_control_flow.types"]], "API Reference": [[4, "api-reference"]], "Welcome to bolt-control-flow's documentation!": [[5, "welcome-to-bolt-control-flow-s-documentation"]], "Contents:": [[5, null]], "Indices and tables": [[5, "indices-and-tables"]]}, "indexentries": {"casecallable (in module bolt_control_flow.helpers)": [[0, "bolt_control_flow.helpers.CaseCallable"]], "casedriver (class in bolt_control_flow.helpers)": [[0, "bolt_control_flow.helpers.CaseDriver"]], "multibranchdriver (class in bolt_control_flow.helpers)": [[0, "bolt_control_flow.helpers.MultibranchDriver"]], "binary_logical() (in module bolt_control_flow.helpers)": [[0, "bolt_control_flow.helpers.binary_logical"]], "bolt_control_flow.helpers": [[0, "module-bolt_control_flow.helpers"]], "call_branch() (in module bolt_control_flow.helpers)": [[0, "bolt_control_flow.helpers.call_branch"]], "call_not() (in module bolt_control_flow.helpers)": [[0, "bolt_control_flow.helpers.call_not"]], "case_definitely_matched (bolt_control_flow.helpers.casedriver attribute)": [[0, "bolt_control_flow.helpers.CaseDriver.case_definitely_matched"]], "case_func (bolt_control_flow.helpers.casedriver attribute)": [[0, "bolt_control_flow.helpers.CaseDriver.case_func"]], "codegen_access_underlying() (bolt_control_flow.helpers.casedriver static method)": [[0, "bolt_control_flow.helpers.CaseDriver.codegen_access_underlying"]], "codegen_call() (bolt_control_flow.helpers.multibranchdriver static method)": [[0, "bolt_control_flow.helpers.MultibranchDriver.codegen_call"]], "context_manager (bolt_control_flow.helpers.multibranchdriver attribute)": [[0, "bolt_control_flow.helpers.MultibranchDriver.context_manager"]], "get_runtime_helpers() (in module bolt_control_flow.helpers)": [[0, "bolt_control_flow.helpers.get_runtime_helpers"]], "module": [[0, "module-bolt_control_flow.helpers"], [1, "module-bolt_control_flow"], [2, "module-bolt_control_flow.parse"], [3, "module-bolt_control_flow.types"]], "not_obj (bolt_control_flow.helpers.casedriver attribute)": [[0, "bolt_control_flow.helpers.CaseDriver.not_obj"]], "obj (bolt_control_flow.helpers.casedriver attribute)": [[0, "bolt_control_flow.helpers.CaseDriver.obj"]], "obj (bolt_control_flow.helpers.multibranchdriver attribute)": [[0, "bolt_control_flow.helpers.MultibranchDriver.obj"]], "runtime (bolt_control_flow.helpers.casedriver attribute)": [[0, "bolt_control_flow.helpers.CaseDriver.runtime"]], "runtime (bolt_control_flow.helpers.multibranchdriver attribute)": [[0, "bolt_control_flow.helpers.MultibranchDriver.runtime"]], "binarylogicalfallback (class in bolt_control_flow)": [[1, "bolt_control_flow.BinaryLogicalFallback"]], "branchinfo (class in bolt_control_flow)": [[1, "bolt_control_flow.BranchInfo"]], "branchtype (class in bolt_control_flow)": [[1, "bolt_control_flow.BranchType"]], "case (in module bolt_control_flow)": [[1, "bolt_control_flow.Case"]], "casematchtype (class in bolt_control_flow)": [[1, "bolt_control_flow.CaseMatchType"]], "casepartialresult (in module bolt_control_flow)": [[1, "bolt_control_flow.CasePartialResult"]], "caseresult (class in bolt_control_flow)": [[1, "bolt_control_flow.CaseResult"]], "caseresult.codegen (class in bolt_control_flow)": [[1, "bolt_control_flow.CaseResult.Codegen"]], "failed (bolt_control_flow.casematchtype attribute)": [[1, "bolt_control_flow.CaseMatchType.FAILED"]], "if_else (bolt_control_flow.branchtype attribute)": [[1, "bolt_control_flow.BranchType.IF_ELSE"]], "match (bolt_control_flow.branchtype attribute)": [[1, "bolt_control_flow.BranchType.MATCH"]], "matched (bolt_control_flow.casematchtype attribute)": [[1, "bolt_control_flow.CaseMatchType.MATCHED"]], "maybe (bolt_control_flow.casematchtype attribute)": [[1, "bolt_control_flow.CaseMatchType.MAYBE"]], "wrappedcases (class in bolt_control_flow)": [[1, "bolt_control_flow.WrappedCases"]], "binding() (bolt_control_flow.caseresult.codegen method)": [[1, "bolt_control_flow.CaseResult.Codegen.binding"]], "bindings (bolt_control_flow.caseresult attribute)": [[1, "bolt_control_flow.CaseResult.bindings"]], "bolt_control_flow": [[1, "module-bolt_control_flow"]], "branch_type (bolt_control_flow.branchinfo attribute)": [[1, "bolt_control_flow.BranchInfo.branch_type"]], "failed() (bolt_control_flow.caseresult static method)": [[1, "bolt_control_flow.CaseResult.failed"]], "helper (bolt_control_flow.branchtype property)": [[1, "bolt_control_flow.BranchType.helper"]], "match_type (bolt_control_flow.caseresult attribute)": [[1, "bolt_control_flow.CaseResult.match_type"]], "match_type (bolt_control_flow.caseresult.codegen property)": [[1, "bolt_control_flow.CaseResult.Codegen.match_type"]], "matched() (bolt_control_flow.caseresult static method)": [[1, "bolt_control_flow.CaseResult.matched"]], "maybe() (bolt_control_flow.caseresult static method)": [[1, "bolt_control_flow.CaseResult.maybe"]], "name (bolt_control_flow.caseresult.codegen attribute)": [[1, "bolt_control_flow.CaseResult.Codegen.name"]], "parent_cases (bolt_control_flow.branchinfo attribute)": [[1, "bolt_control_flow.BranchInfo.parent_cases"]], "right (bolt_control_flow.binarylogicalfallback attribute)": [[1, "bolt_control_flow.BinaryLogicalFallback.right"]], "codegen (class in bolt_control_flow.parse)": [[2, "bolt_control_flow.parse.Codegen"]], "binary_logical() (bolt_control_flow.parse.codegen method)": [[2, "bolt_control_flow.parse.Codegen.binary_logical"]], "bolt_control_flow.parse": [[2, "module-bolt_control_flow.parse"]], "cases_vars (bolt_control_flow.parse.codegen attribute)": [[2, "bolt_control_flow.parse.Codegen.cases_vars"]], "else_statement() (bolt_control_flow.parse.codegen method)": [[2, "bolt_control_flow.parse.Codegen.else_statement"]], "if_statement() (bolt_control_flow.parse.codegen method)": [[2, "bolt_control_flow.parse.Codegen.if_statement"]], "is_conditional_only_in_last_case (bolt_control_flow.parse.codegen attribute)": [[2, "bolt_control_flow.parse.Codegen.is_conditional_only_in_last_case"]], "binarylogicalfallback (class in bolt_control_flow.types)": [[3, "bolt_control_flow.types.BinaryLogicalFallback"]], "branchinfo (class in bolt_control_flow.types)": [[3, "bolt_control_flow.types.BranchInfo"]], "branchtype (class in bolt_control_flow.types)": [[3, "bolt_control_flow.types.BranchType"]], "case (in module bolt_control_flow.types)": [[3, "bolt_control_flow.types.Case"]], "casematchtype (class in bolt_control_flow.types)": [[3, "bolt_control_flow.types.CaseMatchType"]], "casepartialresult (in module bolt_control_flow.types)": [[3, "bolt_control_flow.types.CasePartialResult"]], "caseresult (class in bolt_control_flow.types)": [[3, "bolt_control_flow.types.CaseResult"]], "caseresult.codegen (class in bolt_control_flow.types)": [[3, "bolt_control_flow.types.CaseResult.Codegen"]], "failed (bolt_control_flow.types.casematchtype attribute)": [[3, "bolt_control_flow.types.CaseMatchType.FAILED"]], "if_else (bolt_control_flow.types.branchtype attribute)": [[3, "bolt_control_flow.types.BranchType.IF_ELSE"]], "match (bolt_control_flow.types.branchtype attribute)": [[3, "bolt_control_flow.types.BranchType.MATCH"]], "matched (bolt_control_flow.types.casematchtype attribute)": [[3, "bolt_control_flow.types.CaseMatchType.MATCHED"]], "maybe (bolt_control_flow.types.casematchtype attribute)": [[3, "bolt_control_flow.types.CaseMatchType.MAYBE"]], "wrappedcases (class in bolt_control_flow.types)": [[3, "bolt_control_flow.types.WrappedCases"]], "binding() (bolt_control_flow.types.caseresult.codegen method)": [[3, "bolt_control_flow.types.CaseResult.Codegen.binding"]], "bindings (bolt_control_flow.types.caseresult attribute)": [[3, "bolt_control_flow.types.CaseResult.bindings"]], "bolt_control_flow.types": [[3, "module-bolt_control_flow.types"]], "branch_type (bolt_control_flow.types.branchinfo attribute)": [[3, "bolt_control_flow.types.BranchInfo.branch_type"]], "failed() (bolt_control_flow.types.caseresult static method)": [[3, "bolt_control_flow.types.CaseResult.failed"]], "helper (bolt_control_flow.types.branchtype property)": [[3, "bolt_control_flow.types.BranchType.helper"]], "match_type (bolt_control_flow.types.caseresult attribute)": [[3, "bolt_control_flow.types.CaseResult.match_type"]], "match_type (bolt_control_flow.types.caseresult.codegen property)": [[3, "bolt_control_flow.types.CaseResult.Codegen.match_type"]], "matched() (bolt_control_flow.types.caseresult static method)": [[3, "bolt_control_flow.types.CaseResult.matched"]], "maybe() (bolt_control_flow.types.caseresult static method)": [[3, "bolt_control_flow.types.CaseResult.maybe"]], "name (bolt_control_flow.types.caseresult.codegen attribute)": [[3, "bolt_control_flow.types.CaseResult.Codegen.name"]], "parent_cases (bolt_control_flow.types.branchinfo attribute)": [[3, "bolt_control_flow.types.BranchInfo.parent_cases"]], "right (bolt_control_flow.types.binarylogicalfallback attribute)": [[3, "bolt_control_flow.types.BinaryLogicalFallback.right"]]}})